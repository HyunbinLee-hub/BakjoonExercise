DIR *dir;
	struct dirent **nameList;
	struct stat statbuf;
	int nameCount;		 
	int idx = 0;		// nameList의 인덱스 번호

	// 파일 오픈
	if ((dir = opendir(curDir)) == NULL) {
		fprintf(stderr, "opendir error for %s\n", curDir);
	        return;
	}
	// 현재 디렉토리의 전체 파일 목록 불러오기(알파벳순 정렬)
	if ((nameCount = scandir(curDir, &nameList, NULL, alphasort) < 0))
	{
		fprintf(stderr, "%s: readdir error and scandir error\n", curDir);
	        return;
	}

	// 파일 탐색
	while (nameList[idx] = readdir(dir))
	{
		char newPath[PATH_MAX];
		int len;
		
		lstat(nameList[idx]->d_name, &statbuf);		// 파일 종류 파악용 정보 불러오기
		if (nameList[idx]->d_type == DT_REG) {		// 정규 파일인 경우
			stat(nameList[idx]->d_name, &statbuf);	// 리스트에 추가될 정보 불러오기
			if (strcmp(filename, nameList[idx]->d_name) == 0) {	// 같은 이름의 파일 발견
				if (*psize == statbuf.st_size) {		// 같은 크기의 파일 발견
					// 절대 경로로 변환
                        		len = snprintf(newPath, sizeof(newPath)-1, "%s/%s", curDir, nameList[idx]->d_name);
					newPath[len] = 0;
					// 리스트에 추가
					pinfo = (Info *)malloc(sizeof(Info));
					init_fileInfo(pinfo, newPath);
					ListInsert(plist, pinfo);
					break;
				}
			}
		}
		else if (nameList[idx]->d_type == DT_DIR) {	// 디렉토리 파일인 경우
			// 현재 디렉토리 경로를 절대 경로로 저장
                        len = snprintf(newPath, sizeof(newPath)-1, "%s/%s", curDir, nameList[idx]->d_name);
                        newPath[len] = 0;
			// 현재 디렉토리 및 상위 디렉토리 탐색 없음
                        if (strcmp(nameList[idx]->d_name, ".") == 0 || strcmp(nameList[idx]->d_name, "..") == 0)
                                continue;
			// 찾으려는 디렉토리 파일 발견
			if (strcmp(filename, nameList[idx]->d_name) == 0) {
				// 절대경로로 저장
				len = snprintf(newPath, sizeof(newPath)-1, "%s/%s", curDir, nameList[idx]->d_name);
				newPath[len] = 0;
				// 리스트에 추가
                               	pinfo = (Info *)malloc(sizeof(Info));
		    		init_fileInfo(pinfo, newPath);
                               	ListInsert(plist, pinfo);
				break;
			}
			else
	                        searchFiles(plist, pinfo, psize, newPath, depth+1);	// 재귀를 통한 깊이우선탐색
               	}

	} 
	closedir(dir);	// 파일 탐색 종료 후 디렉토리 닫음
